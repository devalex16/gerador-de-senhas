import { Component, Host, h, Prop, Event } from '@stencil/core';
export class MyCard {
  render() {
    return (h(Host, null,
      h("div", { class: "my-card" },
        h("p", { class: "title" }, this.titlecard),
        h("img", { class: "image", src: this.avatar }),
        h("p", { class: "description" }, this.description),
        h("a", { href: "#", class: "btn", onClick: () => this.pressedButton() }, "Go somewhere"))));
  }
  pressedButton() {
    this.buttoncard.emit(true);
  }
  static get is() { return "my-card"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["my-card.css"]
  }; }
  static get styleUrls() { return {
    "$": ["my-card.css"]
  }; }
  static get properties() { return {
    "avatar": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "avatar",
      "reflect": false
    },
    "titlecard": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "titlecard",
      "reflect": false
    },
    "description": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "description",
      "reflect": false
    }
  }; }
  static get events() { return [{
      "method": "buttoncard",
      "name": "buttoncard",
      "bubbles": true,
      "cancelable": true,
      "composed": true,
      "docs": {
        "tags": [],
        "text": ""
      },
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      }
    }]; }
}
