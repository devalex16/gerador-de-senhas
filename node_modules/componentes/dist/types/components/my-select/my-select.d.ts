import { EventEmitter } from '../../stencil-public-runtime';
import { Select } from './selectItems';
export declare class MySelect {
  /**
   * Define the title of select this only show in mobile view
   */
  titleselect: string;
  /**
   * Define the name of the button close this only show in mobile view
   */
  cancelname: string;
  /**
   * Define the initial text of the placeholder
   */
  placeholder: string;
  /**
   * Define if the placeHolder is a image
   */
  placeholderimg: boolean;
  /**
   * Define how extension the list has, if this is 2 the size is the double of the selector
   */
  extendlist: number;
  /**
   * Define the animation to apply when is opening, based on animate.style
   */
  animationopen: string;
  /**
   * Define the animation to apply when is closing, based on animate.style
   */
  animationclose: string;
  /**
   * Define the list parameters id, name, logo, count. the first element must be id=0 and is fixed
   */
  objectdata: Select | string;
  toggle: boolean;
  currentItem: any;
  element: HTMLElement;
  selected: EventEmitter<boolean>;
  private _objectData;
  private _firstItem;
  private elementSelected;
  private isOpen;
  componentWillLoad(): void;
  componentDidLoad(): void;
  objectDataWatcher(newValue: any): void;
  /**
   * this method open the list
   */
  openDropdown(): Promise<void>;
  /**
   * this method close the list
   */
  closeDropdown(): Promise<void>;
  /**
   * this method save the selection
   */
  selection(selected: any, index: any): Promise<void>;
  /**
   * this method send the size of the list respect with the select
   */
  sendExtend(): Promise<void>;
  onMouseUp(ev: any): void;
  /** Recived keyboard down from element */
  onKey(e: KeyboardEvent): void;
  render(): any;
}
